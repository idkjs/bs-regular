// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Grid$ReactHooksTemplate = require("./components/Grid.bs.js");
var Text$ReactHooksTemplate = require("./components/Text.bs.js");
var Layer$ReactHooksTemplate = require("./components/layer/Layer.bs.js");
var Button$ReactHooksTemplate = require("./components/Button.bs.js");
var Colors$ReactHooksTemplate = require("./components/theme/Colors.bs.js");
var Divider$ReactHooksTemplate = require("./components/Divider.bs.js");
var Spacing$ReactHooksTemplate = require("./components/theme/Spacing.bs.js");
var TextInput$ReactHooksTemplate = require("./components/inputs/TextInput.bs.js");
var ContextLayer$ReactHooksTemplate = require("./components/layer/ContextLayer.bs.js");

var root = Css.style(/* :: */[
      Css.padding(Css.px(32)),
      /* [] */0
    ]);

var button = Css.style(/* :: */[
      Css.marginRight(Css.px(8)),
      /* [] */0
    ]);

var section = Css.style(/* :: */[
      Css.marginBottom(Css.px(32)),
      /* :: */[
        Css.maxWidth(Css.px(640)),
        /* [] */0
      ]
    ]);

var gridRow = Css.style(/* :: */[
      Css.marginBottom(Css.px(16)),
      /* [] */0
    ]);

var gridCell = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            Colors$ReactHooksTemplate.primary475
          ]),
      /* [] */0
    ]);

var contextLayer = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            Colors$ReactHooksTemplate.primary475
          ]),
      /* [] */0
    ]);

var Styles = /* module */[
  /* root */root,
  /* button */button,
  /* section */section,
  /* gridRow */gridRow,
  /* gridCell */gridCell,
  /* contextLayer */contextLayer
];

function repeatElement(num, render) {
  var rv = /* array */[];
  for(var i = 0 ,i_finish = num - 1 | 0; i <= i_finish; ++i){
    rv.push(Curry._1(render, i));
  }
  return rv;
}

function App$ContextLayerExample(Props) {
  var match = React.useState((function () {
          return false;
        }));
  var setShowLayer = match[1];
  var divRef = React.useRef(null);
  React.useEffect((function () {
          Curry._1(setShowLayer, (function (param) {
                  return true;
                }));
          return undefined;
        }), ([]));
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  ref: divRef
                }, "Hello"), match[0] ? React.createElement(React.Fragment, undefined, React.createElement(ContextLayer$ReactHooksTemplate.make, {
                        context: divRef,
                        children: React.createElement("div", {
                              className: contextLayer
                            }, "ContextLayer")
                      }), React.createElement(ContextLayer$ReactHooksTemplate.make, {
                        context: divRef,
                        position: /* Bottom */1,
                        children: React.createElement("div", {
                              className: contextLayer
                            }, "ContextLayer")
                      })) : null);
}

var ContextLayerExample = /* module */[/* make */App$ContextLayerExample];

function App(Props) {
  return React.createElement(Layer$ReactHooksTemplate.provider, {
              children: null
            }, React.createElement("div", {
                  className: root
                }, React.createElement("div", {
                      className: section
                    }, React.createElement(Text$ReactHooksTemplate.header, {
                          children: "Buttons"
                        }), React.createElement(Button$ReactHooksTemplate.make, {
                          children: "primary",
                          className: button
                        }), React.createElement(Button$ReactHooksTemplate.make, {
                          type_: /* Secondary */1,
                          children: "secondary",
                          className: button
                        })), React.createElement("div", {
                      className: section
                    }, React.createElement(Divider$ReactHooksTemplate.make, { }), React.createElement(Text$ReactHooksTemplate.smallHeader, {
                          children: "Header"
                        }), React.createElement(Text$ReactHooksTemplate.body, {
                          children: "Such a riot of sea and wind strews the whole extent of beach with whatever has been lost or thrown overboard, or torn out of sunken ships. Many a man has made a good week's work in a single day by what he has found while walking along the Beach when the surf was down."
                        })), React.createElement("div", {
                      className: section
                    }, React.createElement(Text$ReactHooksTemplate.header, {
                          children: "Grid"
                        }), React.createElement(Grid$ReactHooksTemplate.row, {
                          className: gridRow,
                          children: null
                        }, React.createElement(Grid$ReactHooksTemplate.cell, {
                              span: 6,
                              children: React.createElement("div", {
                                    className: gridCell
                                  }, "6")
                            }), React.createElement(Grid$ReactHooksTemplate.cell, {
                              span: 6,
                              children: React.createElement("div", {
                                    className: gridCell
                                  }, "6")
                            })), React.createElement(Grid$ReactHooksTemplate.row, {
                          className: gridRow,
                          children: repeatElement(3, (function (i) {
                                  return React.createElement(Grid$ReactHooksTemplate.cell, {
                                              span: 4,
                                              children: React.createElement("div", {
                                                    className: gridCell
                                                  }, "4"),
                                              key: String(i)
                                            });
                                }))
                        }), React.createElement(Grid$ReactHooksTemplate.row, {
                          className: gridRow,
                          children: repeatElement(4, (function (i) {
                                  return React.createElement(Grid$ReactHooksTemplate.cell, {
                                              span: 3,
                                              children: React.createElement("div", {
                                                    className: gridCell
                                                  }, "3"),
                                              key: String(i)
                                            });
                                }))
                        }), React.createElement(Grid$ReactHooksTemplate.row, {
                          className: gridRow,
                          children: repeatElement(6, (function (i) {
                                  return React.createElement(Grid$ReactHooksTemplate.cell, {
                                              span: 2,
                                              children: React.createElement("div", {
                                                    className: gridCell
                                                  }, "2"),
                                              key: String(i)
                                            });
                                }))
                        })), React.createElement("div", {
                      className: section
                    }, React.createElement(Text$ReactHooksTemplate.header, {
                          children: "Inputs"
                        }), React.createElement(Grid$ReactHooksTemplate.row, {
                          className: Spacing$ReactHooksTemplate.marginBottom16,
                          children: null
                        }, React.createElement(Grid$ReactHooksTemplate.cell, {
                              span: 6,
                              children: React.createElement(TextInput$ReactHooksTemplate.make, {
                                    placeholder: "First name"
                                  })
                            }), React.createElement(Grid$ReactHooksTemplate.cell, {
                              span: 6,
                              children: React.createElement(TextInput$ReactHooksTemplate.make, {
                                    placeholder: "Last name"
                                  })
                            }))), React.createElement("div", {
                      className: section
                    }, React.createElement(App$ContextLayerExample, { }))), React.createElement(Layer$ReactHooksTemplate.container, { }));
}

var make = App;

exports.Styles = Styles;
exports.repeatElement = repeatElement;
exports.ContextLayerExample = ContextLayerExample;
exports.make = make;
/* root Not a pure module */
