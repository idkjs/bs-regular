// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Cn = require("re-classnames/src/Cn.bs.js");
var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Colors$ReactHooksTemplate = require("./theme/Colors.bs.js");

var button = Css.style(/* :: */[
      Css.borderRadius(Css.px(2)),
      /* :: */[
        Css.borderStyle(Css.none),
        /* :: */[
          Css.color(Css.hex("ffffff")),
          /* :: */[
            Css.fontSize(Css.px(16)),
            /* :: */[
              Css.padding2(Css.px(10), Css.px(16)),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var primary = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            Colors$ReactHooksTemplate.primary200
          ]),
      /* [] */0
    ]);

var secondary = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            "2A77DF"
          ]),
      /* [] */0
    ]);

var Styles = /* module */[
  /* button */button,
  /* primary */primary,
  /* secondary */secondary
];

var make = React.forwardRef((function (Props, forwardedRef) {
        var match = Props.type_;
        var type_ = match !== undefined ? match : /* Primary */0;
        var children = Props.children;
        var className = Props.className;
        var onClick = Props.onClick;
        var onMouseEnter = Props.onMouseEnter;
        var onMouseLeave = Props.onMouseLeave;
        var tmp = {
          className: Cn.make(/* :: */[
                button,
                /* :: */[
                  type_ ? secondary : primary,
                  /* :: */[
                    Cn.unpack(className),
                    /* [] */0
                  ]
                ]
              ])
        };
        var tmp$1 = Belt_Option.map((forwardedRef == null) ? undefined : Caml_option.some(forwardedRef), (function (prim) {
                return prim;
              }));
        if (tmp$1 !== undefined) {
          tmp.ref = Caml_option.valFromOption(tmp$1);
        }
        if (onClick !== undefined) {
          tmp.onClick = Caml_option.valFromOption(onClick);
        }
        if (onMouseEnter !== undefined) {
          tmp.onMouseEnter = Caml_option.valFromOption(onMouseEnter);
        }
        if (onMouseLeave !== undefined) {
          tmp.onMouseLeave = Caml_option.valFromOption(onMouseLeave);
        }
        return React.createElement("button", tmp, children);
      }));

exports.Styles = Styles;
exports.make = make;
/* button Not a pure module */
