// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Colors$ReactHooksTemplate = require("../theme/Colors.bs.js");
var Modals$ReactHooksTemplate = require("./Modals.bs.js");

var root = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            Colors$ReactHooksTemplate.primary500
          ]),
      /* :: */[
        Css.borderRadius(/* `px */[
              25096,
              4
            ]),
        /* :: */[
          Css.width(/* `px */[
                25096,
                512
              ]),
          /* :: */[
            Css.height(/* `px */[
                  25096,
                  256
                ]),
            /* [] */0
          ]
        ]
      ]
    ]);

var Styles = /* module */[/* root */root];

function Modal$root(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: root
            }, children);
}

function Modal(Props) {
  var renderModal = Props.renderModal;
  var onCloseRequest = Props.onCloseRequest;
  var modalKeyRef = React.useRef(undefined);
  var renderModalRef = React.useRef(renderModal);
  var onCloseRequestRef = React.useRef(onCloseRequest);
  React.useLayoutEffect((function () {
          var modalKey = Modals$ReactHooksTemplate.openModal(renderModal, onCloseRequest);
          modalKeyRef.current = modalKey;
          return (function (param) {
                    return Modals$ReactHooksTemplate.closeModal(modalKey);
                  });
        }), ([]));
  React.useLayoutEffect((function () {
          if (renderModalRef.current !== renderModal || onCloseRequestRef.current !== onCloseRequest) {
            Modals$ReactHooksTemplate.updateModal(Belt_Option.getExn(modalKeyRef.current), renderModal, onCloseRequest);
            renderModalRef.current = renderModal;
            onCloseRequestRef.current = onCloseRequest;
          }
          return undefined;
        }), /* tuple */[
        renderModal,
        onCloseRequest
      ]);
  return null;
}

var root$1 = Modal$root;

var make = Modal;

exports.Styles = Styles;
exports.root = root$1;
exports.make = make;
/* root Not a pure module */
