// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Layer$ReactHooksTemplate = require("../layer/Layer.bs.js");

var layer = Css.style(/* :: */[
      Css.position(/* fixed */10615156),
      /* :: */[
        Css.top(/* zero */-789508312),
        /* :: */[
          Css.left(/* zero */-789508312),
          /* :: */[
            Css.right(/* zero */-789508312),
            /* :: */[
              Css.bottom(/* zero */-789508312),
              /* :: */[
                Css.display(/* flex */-1010954439),
                /* :: */[
                  Css.alignItems(/* center */98248149),
                  /* :: */[
                    Css.justifyContent(/* center */98248149),
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var backdrop = Css.style(/* :: */[
      Css.position(/* absolute */-1013592457),
      /* :: */[
        Css.top(/* zero */-789508312),
        /* :: */[
          Css.left(/* zero */-789508312),
          /* :: */[
            Css.right(/* zero */-789508312),
            /* :: */[
              Css.bottom(/* zero */-789508312),
              /* :: */[
                Css.backgroundColor(/* `rgba */[
                      -878128972,
                      /* tuple */[
                        0,
                        0,
                        0,
                        0.1
                      ]
                    ]),
                /* :: */[
                  Css.zIndex(-1),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* layer */layer,
  /* backdrop */backdrop
];

function Modals$Backdrop(Props) {
  var onClick = Props.onClick;
  var tmp = {
    className: backdrop
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement("div", tmp);
}

var Backdrop = /* module */[/* make */Modals$Backdrop];

var nextModalKey = /* record */[/* contents */1];

var modals = /* record */[/* contents : array */[]];

var subscriptions = /* record */[/* contents : array */[]];

function openModal(renderModal) {
  var modalKey = String(nextModalKey[0]);
  modals[0] = /* array */[/* record */[
        /* modalKey */modalKey,
        /* renderModal */renderModal
      ]].concat(modals[0]);
  subscriptions[0].forEach((function (subscription) {
          return Curry._1(subscription, /* () */0);
        }));
  nextModalKey[0] = nextModalKey[0] + 1 | 0;
  return modalKey;
}

function updateModal(modalKey, renderModal) {
  modals[0] = modals[0].map((function (modal) {
          if (modal[/* modalKey */0] === modalKey) {
            return /* record */[
                    /* modalKey */modal[/* modalKey */0],
                    /* renderModal */renderModal
                  ];
          } else {
            return modal;
          }
        }));
  subscriptions[0].forEach((function (subscription) {
          return Curry._1(subscription, /* () */0);
        }));
  return /* () */0;
}

function closeModal(modalKey) {
  modals[0] = modals[0].filter((function (modal) {
          return modal[/* modalKey */0] !== modalKey;
        }));
  subscriptions[0].forEach((function (subscription) {
          return Curry._1(subscription, /* () */0);
        }));
  return /* () */0;
}

function Modals(Props) {
  var match = React.useState((function () {
          return 1;
        }));
  var forceUpdate = match[1];
  React.useLayoutEffect((function () {
          var callback = function (param) {
            return Curry._1(forceUpdate, (function (x) {
                          return x + 1 | 0;
                        }));
          };
          subscriptions[0] = /* array */[callback].concat(subscriptions[0]);
          return (function (param) {
                    subscriptions[0] = subscriptions[0].filter((function (subscription) {
                            return Caml_obj.caml_notequal(subscription, callback);
                          }));
                    return /* () */0;
                  });
        }), ([]));
  if (modals[0].length === 0) {
    return null;
  } else {
    return modals[0].map((function (modal, i) {
                  return React.createElement(Layer$ReactHooksTemplate.make, {
                              children: React.createElement("div", {
                                    className: layer
                                  }, React.createElement(Modals$Backdrop, { }), Curry._1(modal[/* renderModal */1], /* () */0)),
                              key: String(i)
                            });
                }));
  }
}

var make = Modals;

exports.Styles = Styles;
exports.Backdrop = Backdrop;
exports.nextModalKey = nextModalKey;
exports.modals = modals;
exports.subscriptions = subscriptions;
exports.openModal = openModal;
exports.updateModal = updateModal;
exports.closeModal = closeModal;
exports.make = make;
/* layer Not a pure module */
