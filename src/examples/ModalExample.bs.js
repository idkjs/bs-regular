// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Text$ReactHooksTemplate = require("../components/Text.bs.js");
var Modal$ReactHooksTemplate = require("../components/modal/Modal.bs.js");
var Button$ReactHooksTemplate = require("../components/Button.bs.js");

function ModalExample(Props) {
  var match = React.useState((function () {
          return false;
        }));
  var setShowModal = match[1];
  var match$1 = React.useState((function () {
          return 1;
        }));
  var setCount = match$1[1];
  var count = match$1[0];
  var renderModal = React.useCallback((function (param) {
          return React.createElement(Modal$ReactHooksTemplate.root, {
                      children: null
                    }, React.createElement(Text$ReactHooksTemplate.body, {
                          children: "Modal"
                        }), React.createElement("div", undefined, React.createElement(Button$ReactHooksTemplate.make, {
                              children: String(count),
                              onClick: (function (param) {
                                  return Curry._1(setCount, (function (count) {
                                                return count + 1 | 0;
                                              }));
                                })
                            })), React.createElement(Button$ReactHooksTemplate.make, {
                          children: "Hide",
                          onClick: (function (param) {
                              return Curry._1(setShowModal, (function (param) {
                                            return false;
                                          }));
                            })
                        }));
        }), /* array */[count]);
  var onCloseRequest = React.useCallback((function (param) {
          return Curry._1(setShowModal, (function (param) {
                        return false;
                      }));
        }), ([]));
  return React.createElement(React.Fragment, undefined, React.createElement(Button$ReactHooksTemplate.make, {
                  children: "Show modal",
                  onClick: (function (param) {
                      return Curry._1(setShowModal, (function (param) {
                                    return true;
                                  }));
                    })
                }), match[0] ? React.createElement(Modal$ReactHooksTemplate.make, {
                    renderModal: renderModal,
                    onCloseRequest: onCloseRequest
                  }) : null);
}

var make = ModalExample;

exports.make = make;
/* react Not a pure module */
